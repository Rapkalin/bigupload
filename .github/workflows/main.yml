name: Deploy website on push new tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ 8.2 ]

    steps:
      - name: checkout bigupload
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Restore the Composer cache directory
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-'8.0'-composer-

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          dev: no
          args: --no-interaction --prefer-dist --optimize-autoloader --no-scripts --ignore-platform-req=ext-zip

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip "bin" "config" "public" "src" "templates" "translations" "var" "vendor" "importmap.php" "symfony.lock"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: src
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: create or replace backup release
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: "[ ! -d ~/bigupload/website ] || { [ -d ~/bigupload/old_website ] && rm -rf ~/bigupload/old_website/* ; } && mv -fu ~/bigupload/website/* ~/bigupload/old_website && rm -rf ~/bigupload/website/"
      - name: checkout bigupload
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: src

      - name: unzip artifact for deployment
        run: |
          unzip -o release.zip

      - name: Deploy with rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          path: ./
          remote_path: ~/bigupload/website
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: create new Symlink
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            ln -nsrf ~/bigupload/shared/.env ~/bigupload/website/.env
            rm -rf ~/bigupload/website/.htaccess ~/bigupload/website/.git ~/bigupload/website/.github ~/bigupload/website/phpunit.xml.dist  ~/bigupload/website/release.zip
            ln -nsrf ~/bigupload/shared/.htaccess ~/bigupload/website/.htaccess
            ln -nsrf ~/bigupload/shared/.htpasswd ~/bigupload/website/.htpasswd
            ln -nsrf ~/bigupload/shared/uploads ~/bigupload/website/public/uploads

      - name: Clear cache, importmap and asset:compile
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            cd ~/bigupload/website
            /usr/bin/php8.2-cli bin/console cache:clear --env=prod --no-interaction >> log_deploy.log
            /usr/bin/php8.2-cli bin/console doctrine:migrations:migrate >> log_deploy.log
            /usr/bin/php8.2-cli bin/console importmap:install >> log_deploy.log
            /usr/bin/php8.2-cli bin/console asset:compile >> log_deploy.log