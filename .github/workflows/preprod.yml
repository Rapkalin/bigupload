name: Deploy preprod on push feature

on:
  push:
    branches:
      - 'feature/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ 8.2 ]

    steps:
      - name: checkout preprod-bigupload
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      #- name: Restore the Composer cache directory
      #  run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-'8.0'-composer-

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          dev: no
          args: --no-interaction --prefer-dist --optimize-autoloader --no-scripts

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip "bin" "config" "public" "src" "templates" "translations" "var" "vendor" "importmap.php" "symfony.lock"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: src
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      #    - name: create or replace backup release
      #      uses: appleboy/ssh-action@v0.1.10
      #     with:
      #        host: ${{ secrets.DEPLOY_HOST }}
      #        username: ${{ secrets.DEPLOY_USER }}
      #        key: ${{ secrets.DEPLOY_KEY }}
      #        port: 22
      #        script: "[ ! -d ~/preprod-bigupload/website ] || rm -rf ~/preprod-bigupload/old_website && mv -fu ~/preprod-bigupload/website ~/preprod-bigupload/old_website"

      - name: checkout preprod-bigupload
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: src

      - name: unzip artifact for deployment
        run: |
          unzip -o release.zip

      - name: Deploy with rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          path: ./
          remote_path: ~/preprod-bigupload/website
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: create new Symlink
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            ln -nsrf ~/preprod-bigupload/shared/.env ~/preprod-bigupload/website/.env
            rm ~/preprod-bigupload/website/.htaccess
            ln -nsrf ~/preprod-bigupload/shared/.htaccess ~/preprod-bigupload/.htaccess
            ln -nsrf ~/preprod-bigupload/shared/.htpasswd ~/preprod-bigupload/.htpasswd

      #- name: Clear cache, Assets install && Importmap
      #  uses: appleboy/ssh-action@v0.1.10
      #  with:
      #    host: ${{ secrets.DEPLOY_HOST }}
      #    username: ${{ secrets.DEPLOY_USER }}
      #    key: ${{ secrets.DEPLOY_KEY }}
      #    port: 22
      #    script: |
      #      cd preprod-bigupload/website
      #      ls -la
      #      php bin/console cache:clear
      #      php -v

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_KEY }}

      - name: Deploy via SSH
        env:
          REMOTE_DIR: "~/preprod-bigupload/website"  # RÃ©pertoire sur le serveur
          SSH_USER: "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}"  # Remplace par ton utilisateur et serveur SSH
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER "mkdir -p $REMOTE_DIR"
          ssh $SSH_USER "cd $REMOTE_DIR && php bin/console cache:clear --env=prod && php bin/console doctrine:migrations:migrate --no-interaction"